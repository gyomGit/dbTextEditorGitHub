/**
 * generated by Xtext 2.15.0
 */
package org.csstudio.xtext.dbdtexteditor.dbdTextEditor.impl;

import java.util.Collection;

import org.csstudio.xtext.dbdtexteditor.dbdTextEditor.DbdTextEditorPackage;
import org.csstudio.xtext.dbdtexteditor.dbdTextEditor.Dbfnames;
import org.csstudio.xtext.dbdtexteditor.dbdTextEditor.Field;
import org.csstudio.xtext.dbdtexteditor.dbdTextEditor.Fieldattribute;
import org.csstudio.xtext.dbdtexteditor.dbdTextEditor.Fieldnames;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Field</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.csstudio.xtext.dbdtexteditor.dbdTextEditor.impl.FieldImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.csstudio.xtext.dbdtexteditor.dbdTextEditor.impl.FieldImpl#getFieldname <em>Fieldname</em>}</li>
 *   <li>{@link org.csstudio.xtext.dbdtexteditor.dbdTextEditor.impl.FieldImpl#getDbf <em>Dbf</em>}</li>
 *   <li>{@link org.csstudio.xtext.dbdtexteditor.dbdTextEditor.impl.FieldImpl#getFieldattributes <em>Fieldattributes</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FieldImpl extends MinimalEObjectImpl.Container implements Field
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getFieldname() <em>Fieldname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFieldname()
   * @generated
   * @ordered
   */
  protected static final Fieldnames FIELDNAME_EDEFAULT = Fieldnames.NAME;

  /**
   * The cached value of the '{@link #getFieldname() <em>Fieldname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFieldname()
   * @generated
   * @ordered
   */
  protected Fieldnames fieldname = FIELDNAME_EDEFAULT;

  /**
   * The default value of the '{@link #getDbf() <em>Dbf</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDbf()
   * @generated
   * @ordered
   */
  protected static final Dbfnames DBF_EDEFAULT = Dbfnames.DBF_STRING;

  /**
   * The cached value of the '{@link #getDbf() <em>Dbf</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDbf()
   * @generated
   * @ordered
   */
  protected Dbfnames dbf = DBF_EDEFAULT;

  /**
   * The cached value of the '{@link #getFieldattributes() <em>Fieldattributes</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFieldattributes()
   * @generated
   * @ordered
   */
  protected EList<Fieldattribute> fieldattributes;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FieldImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DbdTextEditorPackage.Literals.FIELD;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DbdTextEditorPackage.FIELD__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Fieldnames getFieldname()
  {
    return fieldname;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFieldname(Fieldnames newFieldname)
  {
    Fieldnames oldFieldname = fieldname;
    fieldname = newFieldname == null ? FIELDNAME_EDEFAULT : newFieldname;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DbdTextEditorPackage.FIELD__FIELDNAME, oldFieldname, fieldname));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Dbfnames getDbf()
  {
    return dbf;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDbf(Dbfnames newDbf)
  {
    Dbfnames oldDbf = dbf;
    dbf = newDbf == null ? DBF_EDEFAULT : newDbf;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DbdTextEditorPackage.FIELD__DBF, oldDbf, dbf));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Fieldattribute> getFieldattributes()
  {
    if (fieldattributes == null)
    {
      fieldattributes = new EObjectContainmentEList<Fieldattribute>(Fieldattribute.class, this, DbdTextEditorPackage.FIELD__FIELDATTRIBUTES);
    }
    return fieldattributes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DbdTextEditorPackage.FIELD__FIELDATTRIBUTES:
        return ((InternalEList<?>)getFieldattributes()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DbdTextEditorPackage.FIELD__NAME:
        return getName();
      case DbdTextEditorPackage.FIELD__FIELDNAME:
        return getFieldname();
      case DbdTextEditorPackage.FIELD__DBF:
        return getDbf();
      case DbdTextEditorPackage.FIELD__FIELDATTRIBUTES:
        return getFieldattributes();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DbdTextEditorPackage.FIELD__NAME:
        setName((String)newValue);
        return;
      case DbdTextEditorPackage.FIELD__FIELDNAME:
        setFieldname((Fieldnames)newValue);
        return;
      case DbdTextEditorPackage.FIELD__DBF:
        setDbf((Dbfnames)newValue);
        return;
      case DbdTextEditorPackage.FIELD__FIELDATTRIBUTES:
        getFieldattributes().clear();
        getFieldattributes().addAll((Collection<? extends Fieldattribute>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DbdTextEditorPackage.FIELD__NAME:
        setName(NAME_EDEFAULT);
        return;
      case DbdTextEditorPackage.FIELD__FIELDNAME:
        setFieldname(FIELDNAME_EDEFAULT);
        return;
      case DbdTextEditorPackage.FIELD__DBF:
        setDbf(DBF_EDEFAULT);
        return;
      case DbdTextEditorPackage.FIELD__FIELDATTRIBUTES:
        getFieldattributes().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DbdTextEditorPackage.FIELD__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case DbdTextEditorPackage.FIELD__FIELDNAME:
        return fieldname != FIELDNAME_EDEFAULT;
      case DbdTextEditorPackage.FIELD__DBF:
        return dbf != DBF_EDEFAULT;
      case DbdTextEditorPackage.FIELD__FIELDATTRIBUTES:
        return fieldattributes != null && !fieldattributes.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", fieldname: ");
    result.append(fieldname);
    result.append(", dbf: ");
    result.append(dbf);
    result.append(')');
    return result.toString();
  }

} //FieldImpl
