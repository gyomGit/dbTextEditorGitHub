/**
 * generated by Xtext 2.15.0
 */
package org.csstudio.xtext.dbdtexteditor.dbdTextEditor;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Fieldattributenames</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see org.csstudio.xtext.dbdtexteditor.dbdTextEditor.DbdTextEditorPackage#getFieldattributenames()
 * @model
 * @generated
 */
public enum Fieldattributenames implements Enumerator
{
  /**
   * The '<em><b>Size</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SIZE_VALUE
   * @generated
   * @ordered
   */
  SIZE(0, "size", "size"),

  /**
   * The '<em><b>Prompt</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #PROMPT_VALUE
   * @generated
   * @ordered
   */
  PROMPT(1, "prompt", "prompt"),

  /**
   * The '<em><b>Promptgroup</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #PROMPTGROUP_VALUE
   * @generated
   * @ordered
   */
  PROMPTGROUP(2, "promptgroup", "promptgroup"),

  /**
   * The '<em><b>Menu</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #MENU_VALUE
   * @generated
   * @ordered
   */
  MENU(3, "menu", "menu"),

  /**
   * The '<em><b>Interest</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #INTEREST_VALUE
   * @generated
   * @ordered
   */
  INTEREST(4, "interest", "interest");

  /**
   * The '<em><b>Size</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Size</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #SIZE
   * @model name="size"
   * @generated
   * @ordered
   */
  public static final int SIZE_VALUE = 0;

  /**
   * The '<em><b>Prompt</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Prompt</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #PROMPT
   * @model name="prompt"
   * @generated
   * @ordered
   */
  public static final int PROMPT_VALUE = 1;

  /**
   * The '<em><b>Promptgroup</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Promptgroup</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #PROMPTGROUP
   * @model name="promptgroup"
   * @generated
   * @ordered
   */
  public static final int PROMPTGROUP_VALUE = 2;

  /**
   * The '<em><b>Menu</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Menu</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #MENU
   * @model name="menu"
   * @generated
   * @ordered
   */
  public static final int MENU_VALUE = 3;

  /**
   * The '<em><b>Interest</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Interest</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #INTEREST
   * @model name="interest"
   * @generated
   * @ordered
   */
  public static final int INTEREST_VALUE = 4;

  /**
   * An array of all the '<em><b>Fieldattributenames</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final Fieldattributenames[] VALUES_ARRAY =
    new Fieldattributenames[]
    {
      SIZE,
      PROMPT,
      PROMPTGROUP,
      MENU,
      INTEREST,
    };

  /**
   * A public read-only list of all the '<em><b>Fieldattributenames</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<Fieldattributenames> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>Fieldattributenames</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static Fieldattributenames get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      Fieldattributenames result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Fieldattributenames</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static Fieldattributenames getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      Fieldattributenames result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Fieldattributenames</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static Fieldattributenames get(int value)
  {
    switch (value)
    {
      case SIZE_VALUE: return SIZE;
      case PROMPT_VALUE: return PROMPT;
      case PROMPTGROUP_VALUE: return PROMPTGROUP;
      case MENU_VALUE: return MENU;
      case INTEREST_VALUE: return INTEREST;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private Fieldattributenames(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //Fieldattributenames
