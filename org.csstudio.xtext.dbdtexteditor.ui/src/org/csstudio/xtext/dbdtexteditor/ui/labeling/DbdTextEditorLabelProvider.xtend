/*
 * generated by Xtext 2.15.0
 */
package org.csstudio.xtext.dbdtexteditor.ui.labeling

import com.google.inject.Inject
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider
import org.csstudio.xtext.dbdtexteditor.dbdTextEditor.Menu
import org.csstudio.xtext.dbdtexteditor.dbdTextEditor.Recordtype
import org.csstudio.xtext.dbdtexteditor.dbdTextEditor.Choice
import org.csstudio.xtext.dbdtexteditor.dbdTextEditor.Fieldattribute
import org.csstudio.xtext.dbdtexteditor.dbdTextEditor.Field

/**
 * Provides labels for EObjects.
 * 
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#label-provider
 */
class DbdTextEditorLabelProvider extends DefaultEObjectLabelProvider {

	@Inject
	new(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}
	
	def text(Choice c){
		'choice : ' + c.choicestring
	}
	def text(Fieldattribute f){
		'field attribute : ' + if (f.fieldattributestring === null) 
			 f.fieldattributeint
			else f.fieldattributestring
	}

	def image(Menu m) { "Iter.gif" }
	def image(Recordtype r) { "Iterred.gif"}
	def image(Field f) { "Itergreen.gif"}
	
	// Labels and icons can be computed like this:
	
//	def text(Greeting ele) {
//		'A greeting to ' + ele.name
//	}
//
//	def image(Greeting ele) {
//		'Greeting.gif'
//	}
}
