/*
 * generated by Xtext 2.15.0
 */
package org.csstudio.xtext.dbtexteditor.tests

//import com.google.inject.Inject
//import org.csstudio.xtext.dbtexteditor.dbTextEditor.Field
//import org.csstudio.xtext.dbtexteditor.dbTextEditor.Info
//import org.csstudio.xtext.dbtexteditor.dbTextEditor.dbModel
//import org.eclipse.xtext.testing.InjectWith
//import org.eclipse.xtext.testing.XtextRunner
//import org.eclipse.xtext.testing.util.ParseHelper
//import org.eclipse.xtext.testing.validation.ValidationTestHelper
//import org.junit.Assert
//import org.junit.Test
//import org.junit.runner.RunWith
//
//@RunWith(XtextRunner)
//@InjectWith(DbTextEditorInjectorProvider)
class DbTextEditorParsingTest {

//	@Inject extension ParseHelper<dbModel>
//	@Inject extension ValidationTestHelper
//
//	@Test
//	def void testParsing() {
//		val dbmodel = '''
//			record(ai, 'String'){
//				info(asyn:REABBACK, 'String')
//				field(FIELDNAME, 'String')
//				field(FIELDNAME, int)
//			}
//		'''.parse
//
//		val record = dbmodel.records.get(0)
//		Assert.assertEquals("record", record.name)
//		Assert.assertEquals("ai", record.recordname)
//
//		val infosfields = record.infosfields.get(0)
//		Assert.assertEquals("FIELDNAME", (infosfields as Field).fieldname);
//		Assert.assertEquals("info(asyn:REABBACK, 'String')", infosfields as Info);
//	}
//
//	@Test
//	def void testCorrectParsing() {
//		'''
//			record(ai, String){
//					info(asyn:REABBACK, 'String')
//					field(FIELDNAME, 'String')
//					field(FIELDNAME, int)
//				}
//		'''.parse.assertNoErrors
//	}
}
