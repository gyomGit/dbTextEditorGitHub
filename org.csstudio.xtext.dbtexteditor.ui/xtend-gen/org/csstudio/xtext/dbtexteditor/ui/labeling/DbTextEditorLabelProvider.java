/**
 * generated by Xtext 2.15.0
 */
package org.csstudio.xtext.dbtexteditor.ui.labeling;

import com.google.inject.Inject;
import org.csstudio.xtext.dbtexteditor.dbTextEditor.Field;
import org.csstudio.xtext.dbtexteditor.dbTextEditor.Info;
import org.csstudio.xtext.dbtexteditor.dbTextEditor.Record;
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider;

/**
 * Provides labels for EObjects.
 * 
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#label-provider
 */
@SuppressWarnings("all")
public class DbTextEditorLabelProvider extends DefaultEObjectLabelProvider {
  @Inject
  public DbTextEditorLabelProvider(final AdapterFactoryLabelProvider delegate) {
    super(delegate);
  }
  
  public String text(final Record r) {
    String _recordLink = r.getRecordLink();
    return ("record : " + _recordLink);
  }
  
  public String text(final Info i) {
    String _infoValue = i.getInfoValue();
    String _plus = ("info(asyn:READBACK " + _infoValue);
    return (_plus + ")");
  }
  
  public String text(final Field f) {
    Object _xifexpression = null;
    String _fieldstring = f.getFieldstring();
    boolean _tripleEquals = (_fieldstring == null);
    if (_tripleEquals) {
      _xifexpression = Integer.valueOf(f.getFieldint());
    } else {
      _xifexpression = f.getFieldstring();
    }
    return ("field : " + _xifexpression);
  }
  
  public String image(final Record r) {
    return "Iter.gif";
  }
  
  public String image(final Field f) {
    return "Itergreen.gif";
  }
}
