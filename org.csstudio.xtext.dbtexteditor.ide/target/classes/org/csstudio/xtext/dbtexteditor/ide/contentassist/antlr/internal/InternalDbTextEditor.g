/*
 * generated by Xtext 2.15.0
 */
grammar InternalDbTextEditor;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.csstudio.xtext.dbtexteditor.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.csstudio.xtext.dbtexteditor.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.csstudio.xtext.dbtexteditor.services.DbTextEditorGrammarAccess;

}
@parser::members {
	private DbTextEditorGrammarAccess grammarAccess;

	public void setGrammarAccess(DbTextEditorGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuledbModel
entryRuledbModel
:
{ before(grammarAccess.getDbModelRule()); }
	 ruledbModel
{ after(grammarAccess.getDbModelRule()); } 
	 EOF 
;

// Rule dbModel
ruledbModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDbModelAccess().getRecordsAssignment()); }
		(rule__DbModel__RecordsAssignment)*
		{ after(grammarAccess.getDbModelAccess().getRecordsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRecord
entryRuleRecord
:
{ before(grammarAccess.getRecordRule()); }
	 ruleRecord
{ after(grammarAccess.getRecordRule()); } 
	 EOF 
;

// Rule Record
ruleRecord 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRecordAccess().getGroup()); }
		(rule__Record__Group__0)
		{ after(grammarAccess.getRecordAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleField
entryRuleField
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldAccess().getGroup()); }
		(rule__Field__Group__0)
		{ after(grammarAccess.getFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInfo
entryRuleInfo
:
{ before(grammarAccess.getInfoRule()); }
	 ruleInfo
{ after(grammarAccess.getInfoRule()); } 
	 EOF 
;

// Rule Info
ruleInfo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInfoAccess().getGroup()); }
		(rule__Info__Group__0)
		{ after(grammarAccess.getInfoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDOUBLE
entryRuleDOUBLE
:
{ before(grammarAccess.getDOUBLERule()); }
	 ruleDOUBLE
{ after(grammarAccess.getDOUBLERule()); } 
	 EOF 
;

// Rule DOUBLE
ruleDOUBLE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDOUBLEAccess().getGroup()); }
		(rule__DOUBLE__Group__0)
		{ after(grammarAccess.getDOUBLEAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Fieldnames
ruleFieldnames
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldnamesAccess().getAlternatives()); }
		(rule__Fieldnames__Alternatives)
		{ after(grammarAccess.getFieldnamesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Recordnames
ruleRecordnames
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecordnamesAccess().getAlternatives()); }
		(rule__Recordnames__Alternatives)
		{ after(grammarAccess.getRecordnamesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__InfosfieldsAlternatives_7_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecordAccess().getInfosfieldsInfoParserRuleCall_7_0_0()); }
		ruleInfo
		{ after(grammarAccess.getRecordAccess().getInfosfieldsInfoParserRuleCall_7_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRecordAccess().getInfosfieldsFieldParserRuleCall_7_0_1()); }
		ruleField
		{ after(grammarAccess.getRecordAccess().getInfosfieldsFieldParserRuleCall_7_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getFieldstringAssignment_4_0()); }
		(rule__Field__FieldstringAssignment_4_0)
		{ after(grammarAccess.getFieldAccess().getFieldstringAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getFieldAccess().getFieldintAssignment_4_1()); }
		(rule__Field__FieldintAssignment_4_1)
		{ after(grammarAccess.getFieldAccess().getFieldintAssignment_4_1()); }
	)
	|
	(
		{ before(grammarAccess.getFieldAccess().getFielddoubleAssignment_4_2()); }
		(rule__Field__FielddoubleAssignment_4_2)
		{ after(grammarAccess.getFieldAccess().getFielddoubleAssignment_4_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fieldnames__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldnamesAccess().getNAMEEnumLiteralDeclaration_0()); }
		('NAME')
		{ after(grammarAccess.getFieldnamesAccess().getNAMEEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getDESCEnumLiteralDeclaration_1()); }
		('DESC')
		{ after(grammarAccess.getFieldnamesAccess().getDESCEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getASGEnumLiteralDeclaration_2()); }
		('ASG')
		{ after(grammarAccess.getFieldnamesAccess().getASGEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getSCANEnumLiteralDeclaration_3()); }
		('SCAN')
		{ after(grammarAccess.getFieldnamesAccess().getSCANEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getPHASEnumLiteralDeclaration_4()); }
		('PHAS')
		{ after(grammarAccess.getFieldnamesAccess().getPHASEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getPINIEnumLiteralDeclaration_5()); }
		('PINI')
		{ after(grammarAccess.getFieldnamesAccess().getPINIEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getSDISEnumLiteralDeclaration_6()); }
		('SDIS')
		{ after(grammarAccess.getFieldnamesAccess().getSDISEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getPROCEnumLiteralDeclaration_7()); }
		('PROC')
		{ after(grammarAccess.getFieldnamesAccess().getPROCEnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getPACTEnumLiteralDeclaration_8()); }
		('PACT')
		{ after(grammarAccess.getFieldnamesAccess().getPACTEnumLiteralDeclaration_8()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getSEVREnumLiteralDeclaration_9()); }
		('SEVR')
		{ after(grammarAccess.getFieldnamesAccess().getSEVREnumLiteralDeclaration_9()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getSTATEnumLiteralDeclaration_10()); }
		('STAT')
		{ after(grammarAccess.getFieldnamesAccess().getSTATEnumLiteralDeclaration_10()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getTIMEEnumLiteralDeclaration_11()); }
		('TIME')
		{ after(grammarAccess.getFieldnamesAccess().getTIMEEnumLiteralDeclaration_11()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getDTYPEnumLiteralDeclaration_12()); }
		('DTYP')
		{ after(grammarAccess.getFieldnamesAccess().getDTYPEnumLiteralDeclaration_12()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getONAMEnumLiteralDeclaration_13()); }
		('ONAM')
		{ after(grammarAccess.getFieldnamesAccess().getONAMEnumLiteralDeclaration_13()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getOSVEnumLiteralDeclaration_14()); }
		('OSV')
		{ after(grammarAccess.getFieldnamesAccess().getOSVEnumLiteralDeclaration_14()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getOUTEnumLiteralDeclaration_15()); }
		('OUT')
		{ after(grammarAccess.getFieldnamesAccess().getOUTEnumLiteralDeclaration_15()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getSIMLEnumLiteralDeclaration_16()); }
		('SIML')
		{ after(grammarAccess.getFieldnamesAccess().getSIMLEnumLiteralDeclaration_16()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getZNAMEnumLiteralDeclaration_17()); }
		('ZNAM')
		{ after(grammarAccess.getFieldnamesAccess().getZNAMEnumLiteralDeclaration_17()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getZSVEnumLiteralDeclaration_18()); }
		('ZSV')
		{ after(grammarAccess.getFieldnamesAccess().getZSVEnumLiteralDeclaration_18()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getINPEnumLiteralDeclaration_19()); }
		('INP')
		{ after(grammarAccess.getFieldnamesAccess().getINPEnumLiteralDeclaration_19()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getEGUEnumLiteralDeclaration_20()); }
		('EGU')
		{ after(grammarAccess.getFieldnamesAccess().getEGUEnumLiteralDeclaration_20()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getLINREnumLiteralDeclaration_21()); }
		('LINR')
		{ after(grammarAccess.getFieldnamesAccess().getLINREnumLiteralDeclaration_21()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getEGULEnumLiteralDeclaration_22()); }
		('EGUL')
		{ after(grammarAccess.getFieldnamesAccess().getEGULEnumLiteralDeclaration_22()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getEGUFEnumLiteralDeclaration_23()); }
		('EGUF')
		{ after(grammarAccess.getFieldnamesAccess().getEGUFEnumLiteralDeclaration_23()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getHIGHEnumLiteralDeclaration_24()); }
		('HIGH')
		{ after(grammarAccess.getFieldnamesAccess().getHIGHEnumLiteralDeclaration_24()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getHSVEnumLiteralDeclaration_25()); }
		('HSV')
		{ after(grammarAccess.getFieldnamesAccess().getHSVEnumLiteralDeclaration_25()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getHIHIEnumLiteralDeclaration_26()); }
		('HIHI')
		{ after(grammarAccess.getFieldnamesAccess().getHIHIEnumLiteralDeclaration_26()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getHHSVEnumLiteralDeclaration_27()); }
		('HHSV')
		{ after(grammarAccess.getFieldnamesAccess().getHHSVEnumLiteralDeclaration_27()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getEISTEnumLiteralDeclaration_28()); }
		('EIST')
		{ after(grammarAccess.getFieldnamesAccess().getEISTEnumLiteralDeclaration_28()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getEISVEnumLiteralDeclaration_29()); }
		('EISV')
		{ after(grammarAccess.getFieldnamesAccess().getEISVEnumLiteralDeclaration_29()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getEIVLEnumLiteralDeclaration_30()); }
		('EIVL')
		{ after(grammarAccess.getFieldnamesAccess().getEIVLEnumLiteralDeclaration_30()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getELSTEnumLiteralDeclaration_31()); }
		('ELST')
		{ after(grammarAccess.getFieldnamesAccess().getELSTEnumLiteralDeclaration_31()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getELSVEnumLiteralDeclaration_32()); }
		('ELSV')
		{ after(grammarAccess.getFieldnamesAccess().getELSVEnumLiteralDeclaration_32()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getELVLEnumLiteralDeclaration_33()); }
		('ELVL')
		{ after(grammarAccess.getFieldnamesAccess().getELVLEnumLiteralDeclaration_33()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getFRSTEnumLiteralDeclaration_34()); }
		('FRST')
		{ after(grammarAccess.getFieldnamesAccess().getFRSTEnumLiteralDeclaration_34()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getFRSVEnumLiteralDeclaration_35()); }
		('FRSV')
		{ after(grammarAccess.getFieldnamesAccess().getFRSVEnumLiteralDeclaration_35()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getFRVLEnumLiteralDeclaration_36()); }
		('FRVL')
		{ after(grammarAccess.getFieldnamesAccess().getFRVLEnumLiteralDeclaration_36()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getFVSTEnumLiteralDeclaration_37()); }
		('FVST')
		{ after(grammarAccess.getFieldnamesAccess().getFVSTEnumLiteralDeclaration_37()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getHYSTEnumLiteralDeclaration_38()); }
		('HYST')
		{ after(grammarAccess.getFieldnamesAccess().getHYSTEnumLiteralDeclaration_38()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getLLSVEnumLiteralDeclaration_39()); }
		('LLSV')
		{ after(grammarAccess.getFieldnamesAccess().getLLSVEnumLiteralDeclaration_39()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getFVSVEnumLiteralDeclaration_40()); }
		('FVSV')
		{ after(grammarAccess.getFieldnamesAccess().getFVSVEnumLiteralDeclaration_40()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getFVVLEnumLiteralDeclaration_41()); }
		('FVVL')
		{ after(grammarAccess.getFieldnamesAccess().getFVVLEnumLiteralDeclaration_41()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getMASKEnumLiteralDeclaration_42()); }
		('MASK')
		{ after(grammarAccess.getFieldnamesAccess().getMASKEnumLiteralDeclaration_42()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getNISTEnumLiteralDeclaration_43()); }
		('NIST')
		{ after(grammarAccess.getFieldnamesAccess().getNISTEnumLiteralDeclaration_43()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getNISVEnumLiteralDeclaration_44()); }
		('NISV')
		{ after(grammarAccess.getFieldnamesAccess().getNISVEnumLiteralDeclaration_44()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getNIVLEnumLiteralDeclaration_45()); }
		('NIVL')
		{ after(grammarAccess.getFieldnamesAccess().getNIVLEnumLiteralDeclaration_45()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getNOBTEnumLiteralDeclaration_46()); }
		('NOBT')
		{ after(grammarAccess.getFieldnamesAccess().getNOBTEnumLiteralDeclaration_46()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getONSTEnumLiteralDeclaration_47()); }
		('ONST')
		{ after(grammarAccess.getFieldnamesAccess().getONSTEnumLiteralDeclaration_47()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getONSVEnumLiteralDeclaration_48()); }
		('ONSV')
		{ after(grammarAccess.getFieldnamesAccess().getONSVEnumLiteralDeclaration_48()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getONVLEnumLiteralDeclaration_49()); }
		('ONVL')
		{ after(grammarAccess.getFieldnamesAccess().getONVLEnumLiteralDeclaration_49()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getSHFTEnumLiteralDeclaration_50()); }
		('SHFT')
		{ after(grammarAccess.getFieldnamesAccess().getSHFTEnumLiteralDeclaration_50()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getSVSTEnumLiteralDeclaration_51()); }
		('SVST')
		{ after(grammarAccess.getFieldnamesAccess().getSVSTEnumLiteralDeclaration_51()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getSVSVEnumLiteralDeclaration_52()); }
		('SVSV')
		{ after(grammarAccess.getFieldnamesAccess().getSVSVEnumLiteralDeclaration_52()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getSVVLEnumLiteralDeclaration_53()); }
		('SVVL')
		{ after(grammarAccess.getFieldnamesAccess().getSVVLEnumLiteralDeclaration_53()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getSXSTEnumLiteralDeclaration_54()); }
		('SXST')
		{ after(grammarAccess.getFieldnamesAccess().getSXSTEnumLiteralDeclaration_54()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getSXSVEnumLiteralDeclaration_55()); }
		('SXSV')
		{ after(grammarAccess.getFieldnamesAccess().getSXSVEnumLiteralDeclaration_55()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getSXVLEnumLiteralDeclaration_56()); }
		('SXVL')
		{ after(grammarAccess.getFieldnamesAccess().getSXVLEnumLiteralDeclaration_56()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getTESTEnumLiteralDeclaration_57()); }
		('TEST')
		{ after(grammarAccess.getFieldnamesAccess().getTESTEnumLiteralDeclaration_57()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getTESVEnumLiteralDeclaration_58()); }
		('TESV')
		{ after(grammarAccess.getFieldnamesAccess().getTESVEnumLiteralDeclaration_58()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getTEVLEnumLiteralDeclaration_59()); }
		('TEVL')
		{ after(grammarAccess.getFieldnamesAccess().getTEVLEnumLiteralDeclaration_59()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getTHSTEnumLiteralDeclaration_60()); }
		('THST')
		{ after(grammarAccess.getFieldnamesAccess().getTHSTEnumLiteralDeclaration_60()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getTHSVEnumLiteralDeclaration_61()); }
		('THSV')
		{ after(grammarAccess.getFieldnamesAccess().getTHSVEnumLiteralDeclaration_61()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getTHVLEnumLiteralDeclaration_62()); }
		('THVL')
		{ after(grammarAccess.getFieldnamesAccess().getTHVLEnumLiteralDeclaration_62()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getTWSTEnumLiteralDeclaration_63()); }
		('TWST')
		{ after(grammarAccess.getFieldnamesAccess().getTWSTEnumLiteralDeclaration_63()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getTWSVEnumLiteralDeclaration_64()); }
		('TWSV')
		{ after(grammarAccess.getFieldnamesAccess().getTWSVEnumLiteralDeclaration_64()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getTWVLEnumLiteralDeclaration_65()); }
		('TWVL')
		{ after(grammarAccess.getFieldnamesAccess().getTWVLEnumLiteralDeclaration_65()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getUNSVEnumLiteralDeclaration_66()); }
		('UNSV')
		{ after(grammarAccess.getFieldnamesAccess().getUNSVEnumLiteralDeclaration_66()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getZRSTEnumLiteralDeclaration_67()); }
		('ZRST')
		{ after(grammarAccess.getFieldnamesAccess().getZRSTEnumLiteralDeclaration_67()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getZRSVEnumLiteralDeclaration_68()); }
		('ZRSV')
		{ after(grammarAccess.getFieldnamesAccess().getZRSVEnumLiteralDeclaration_68()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getZRVLEnumLiteralDeclaration_69()); }
		('ZRVL')
		{ after(grammarAccess.getFieldnamesAccess().getZRVLEnumLiteralDeclaration_69()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getLOLOEnumLiteralDeclaration_70()); }
		('LOLO')
		{ after(grammarAccess.getFieldnamesAccess().getLOLOEnumLiteralDeclaration_70()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getLOWEnumLiteralDeclaration_71()); }
		('LOW')
		{ after(grammarAccess.getFieldnamesAccess().getLOWEnumLiteralDeclaration_71()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getLSVEnumLiteralDeclaration_72()); }
		('LSV')
		{ after(grammarAccess.getFieldnamesAccess().getLSVEnumLiteralDeclaration_72()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getSSCNEnumLiteralDeclaration_73()); }
		('SSCN')
		{ after(grammarAccess.getFieldnamesAccess().getSSCNEnumLiteralDeclaration_73()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getTSEEnumLiteralDeclaration_74()); }
		('TSE')
		{ after(grammarAccess.getFieldnamesAccess().getTSEEnumLiteralDeclaration_74()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getPRECEnumLiteralDeclaration_75()); }
		('PREC')
		{ after(grammarAccess.getFieldnamesAccess().getPRECEnumLiteralDeclaration_75()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getDRVHEnumLiteralDeclaration_76()); }
		('DRVH')
		{ after(grammarAccess.getFieldnamesAccess().getDRVHEnumLiteralDeclaration_76()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getLOPREnumLiteralDeclaration_77()); }
		('LOPR')
		{ after(grammarAccess.getFieldnamesAccess().getLOPREnumLiteralDeclaration_77()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getDRVLEnumLiteralDeclaration_78()); }
		('DRVL')
		{ after(grammarAccess.getFieldnamesAccess().getDRVLEnumLiteralDeclaration_78()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getHOPREnumLiteralDeclaration_79()); }
		('HOPR')
		{ after(grammarAccess.getFieldnamesAccess().getHOPREnumLiteralDeclaration_79()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getCALCEnumLiteralDeclaration_80()); }
		('CALC')
		{ after(grammarAccess.getFieldnamesAccess().getCALCEnumLiteralDeclaration_80()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getINPAEnumLiteralDeclaration_81()); }
		('INPA')
		{ after(grammarAccess.getFieldnamesAccess().getINPAEnumLiteralDeclaration_81()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getINPBEnumLiteralDeclaration_82()); }
		('INPB')
		{ after(grammarAccess.getFieldnamesAccess().getINPBEnumLiteralDeclaration_82()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getINPCEnumLiteralDeclaration_83()); }
		('INPC')
		{ after(grammarAccess.getFieldnamesAccess().getINPCEnumLiteralDeclaration_83()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getINPDEnumLiteralDeclaration_84()); }
		('INPD')
		{ after(grammarAccess.getFieldnamesAccess().getINPDEnumLiteralDeclaration_84()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getFLNKEnumLiteralDeclaration_85()); }
		('FLNK')
		{ after(grammarAccess.getFieldnamesAccess().getFLNKEnumLiteralDeclaration_85()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getINPEEnumLiteralDeclaration_86()); }
		('INPE')
		{ after(grammarAccess.getFieldnamesAccess().getINPEEnumLiteralDeclaration_86()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getINPFEnumLiteralDeclaration_87()); }
		('INPF')
		{ after(grammarAccess.getFieldnamesAccess().getINPFEnumLiteralDeclaration_87()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getINPGEnumLiteralDeclaration_88()); }
		('INPG')
		{ after(grammarAccess.getFieldnamesAccess().getINPGEnumLiteralDeclaration_88()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getINPHEnumLiteralDeclaration_89()); }
		('INPH')
		{ after(grammarAccess.getFieldnamesAccess().getINPHEnumLiteralDeclaration_89()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getINPIEnumLiteralDeclaration_90()); }
		('INPI')
		{ after(grammarAccess.getFieldnamesAccess().getINPIEnumLiteralDeclaration_90()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getINPJEnumLiteralDeclaration_91()); }
		('INPJ')
		{ after(grammarAccess.getFieldnamesAccess().getINPJEnumLiteralDeclaration_91()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getINPKEnumLiteralDeclaration_92()); }
		('INPK')
		{ after(grammarAccess.getFieldnamesAccess().getINPKEnumLiteralDeclaration_92()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getINAAEnumLiteralDeclaration_93()); }
		('INAA')
		{ after(grammarAccess.getFieldnamesAccess().getINAAEnumLiteralDeclaration_93()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getINBBEnumLiteralDeclaration_94()); }
		('INBB')
		{ after(grammarAccess.getFieldnamesAccess().getINBBEnumLiteralDeclaration_94()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getINCCEnumLiteralDeclaration_95()); }
		('INCC')
		{ after(grammarAccess.getFieldnamesAccess().getINCCEnumLiteralDeclaration_95()); }
	)
	|
	(
		{ before(grammarAccess.getFieldnamesAccess().getSIOLEnumLiteralDeclaration_96()); }
		('SIOL')
		{ after(grammarAccess.getFieldnamesAccess().getSIOLEnumLiteralDeclaration_96()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Recordnames__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecordnamesAccess().getAiEnumLiteralDeclaration_0()); }
		('ai')
		{ after(grammarAccess.getRecordnamesAccess().getAiEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getRecordnamesAccess().getAoEnumLiteralDeclaration_1()); }
		('ao')
		{ after(grammarAccess.getRecordnamesAccess().getAoEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getRecordnamesAccess().getLonginEnumLiteralDeclaration_2()); }
		('longin')
		{ after(grammarAccess.getRecordnamesAccess().getLonginEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getRecordnamesAccess().getLongoutEnumLiteralDeclaration_3()); }
		('longout')
		{ after(grammarAccess.getRecordnamesAccess().getLongoutEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getRecordnamesAccess().getStringinEnumLiteralDeclaration_4()); }
		('stringin')
		{ after(grammarAccess.getRecordnamesAccess().getStringinEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getRecordnamesAccess().getStringoutEnumLiteralDeclaration_5()); }
		('stringout')
		{ after(grammarAccess.getRecordnamesAccess().getStringoutEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getRecordnamesAccess().getLsiEnumLiteralDeclaration_6()); }
		('lsi')
		{ after(grammarAccess.getRecordnamesAccess().getLsiEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getRecordnamesAccess().getLsoEnumLiteralDeclaration_7()); }
		('lso')
		{ after(grammarAccess.getRecordnamesAccess().getLsoEnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getRecordnamesAccess().getWaveformEnumLiteralDeclaration_8()); }
		('waveform')
		{ after(grammarAccess.getRecordnamesAccess().getWaveformEnumLiteralDeclaration_8()); }
	)
	|
	(
		{ before(grammarAccess.getRecordnamesAccess().getBiEnumLiteralDeclaration_9()); }
		('bi')
		{ after(grammarAccess.getRecordnamesAccess().getBiEnumLiteralDeclaration_9()); }
	)
	|
	(
		{ before(grammarAccess.getRecordnamesAccess().getBoEnumLiteralDeclaration_10()); }
		('bo')
		{ after(grammarAccess.getRecordnamesAccess().getBoEnumLiteralDeclaration_10()); }
	)
	|
	(
		{ before(grammarAccess.getRecordnamesAccess().getMbbiEnumLiteralDeclaration_11()); }
		('mbbi')
		{ after(grammarAccess.getRecordnamesAccess().getMbbiEnumLiteralDeclaration_11()); }
	)
	|
	(
		{ before(grammarAccess.getRecordnamesAccess().getMbboEnumLiteralDeclaration_12()); }
		('mbbo')
		{ after(grammarAccess.getRecordnamesAccess().getMbboEnumLiteralDeclaration_12()); }
	)
	|
	(
		{ before(grammarAccess.getRecordnamesAccess().getMbbiDirectEnumLiteralDeclaration_13()); }
		('mbbiDirect')
		{ after(grammarAccess.getRecordnamesAccess().getMbbiDirectEnumLiteralDeclaration_13()); }
	)
	|
	(
		{ before(grammarAccess.getRecordnamesAccess().getMbboDirectEnumLiteralDeclaration_14()); }
		('mbboDirect')
		{ after(grammarAccess.getRecordnamesAccess().getMbboDirectEnumLiteralDeclaration_14()); }
	)
	|
	(
		{ before(grammarAccess.getRecordnamesAccess().getCalcoutEnumLiteralDeclaration_15()); }
		('calcout')
		{ after(grammarAccess.getRecordnamesAccess().getCalcoutEnumLiteralDeclaration_15()); }
	)
	|
	(
		{ before(grammarAccess.getRecordnamesAccess().getScalcoutEnumLiteralDeclaration_16()); }
		('scalcout')
		{ after(grammarAccess.getRecordnamesAccess().getScalcoutEnumLiteralDeclaration_16()); }
	)
	|
	(
		{ before(grammarAccess.getRecordnamesAccess().getCalcEnumLiteralDeclaration_17()); }
		('calc')
		{ after(grammarAccess.getRecordnamesAccess().getCalcEnumLiteralDeclaration_17()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Record__Group__0__Impl
	rule__Record__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccess().getNameAssignment_0()); }
	(rule__Record__NameAssignment_0)
	{ after(grammarAccess.getRecordAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Record__Group__1__Impl
	rule__Record__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getRecordAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Record__Group__2__Impl
	rule__Record__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccess().getRecordnameAssignment_2()); }
	(rule__Record__RecordnameAssignment_2)
	{ after(grammarAccess.getRecordAccess().getRecordnameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Record__Group__3__Impl
	rule__Record__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getRecordAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Record__Group__4__Impl
	rule__Record__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccess().getRecordLinkAssignment_4()); }
	(rule__Record__RecordLinkAssignment_4)
	{ after(grammarAccess.getRecordAccess().getRecordLinkAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Record__Group__5__Impl
	rule__Record__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getRecordAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Record__Group__6__Impl
	rule__Record__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccess().getLeftCurlyBracketKeyword_6()); }
	'{'
	{ after(grammarAccess.getRecordAccess().getLeftCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Record__Group__7__Impl
	rule__Record__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccess().getInfosfieldsAssignment_7()); }
	(rule__Record__InfosfieldsAssignment_7)*
	{ after(grammarAccess.getRecordAccess().getInfosfieldsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Record__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getRecordAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__0__Impl
	rule__Field__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getNameAssignment_0()); }
	(rule__Field__NameAssignment_0)
	{ after(grammarAccess.getFieldAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__1__Impl
	rule__Field__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getFieldAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__2__Impl
	rule__Field__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getFieldnameAssignment_2()); }
	(rule__Field__FieldnameAssignment_2)
	{ after(grammarAccess.getFieldAccess().getFieldnameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__3__Impl
	rule__Field__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getFieldAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__4__Impl
	rule__Field__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getAlternatives_4()); }
	(rule__Field__Alternatives_4)
	{ after(grammarAccess.getFieldAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getFieldAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Info__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Info__Group__0__Impl
	rule__Info__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Info__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfoAccess().getInfoKeyword_0()); }
	'info'
	{ after(grammarAccess.getInfoAccess().getInfoKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Info__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Info__Group__1__Impl
	rule__Info__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Info__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfoAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getInfoAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Info__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Info__Group__2__Impl
	rule__Info__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Info__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfoAccess().getNameAssignment_2()); }
	(rule__Info__NameAssignment_2)
	{ after(grammarAccess.getInfoAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Info__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Info__Group__3__Impl
	rule__Info__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Info__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfoAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getInfoAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Info__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Info__Group__4__Impl
	rule__Info__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Info__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfoAccess().getInfoValueAssignment_4()); }
	(rule__Info__InfoValueAssignment_4)
	{ after(grammarAccess.getInfoAccess().getInfoValueAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Info__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Info__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Info__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfoAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getInfoAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE__Group__0__Impl
	rule__DOUBLE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
	{ after(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE__Group__1__Impl
	rule__DOUBLE__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLEAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getDOUBLEAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
	{ after(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DbModel__RecordsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDbModelAccess().getRecordsRecordParserRuleCall_0()); }
		ruleRecord
		{ after(grammarAccess.getDbModelAccess().getRecordsRecordParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecordAccess().getNameRecordKeyword_0_0()); }
		(
			{ before(grammarAccess.getRecordAccess().getNameRecordKeyword_0_0()); }
			'record'
			{ after(grammarAccess.getRecordAccess().getNameRecordKeyword_0_0()); }
		)
		{ after(grammarAccess.getRecordAccess().getNameRecordKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__RecordnameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecordAccess().getRecordnameRecordnamesEnumRuleCall_2_0()); }
		ruleRecordnames
		{ after(grammarAccess.getRecordAccess().getRecordnameRecordnamesEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__RecordLinkAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecordAccess().getRecordLinkSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getRecordAccess().getRecordLinkSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__InfosfieldsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecordAccess().getInfosfieldsAlternatives_7_0()); }
		(rule__Record__InfosfieldsAlternatives_7_0)
		{ after(grammarAccess.getRecordAccess().getInfosfieldsAlternatives_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getNameFieldKeyword_0_0()); }
		(
			{ before(grammarAccess.getFieldAccess().getNameFieldKeyword_0_0()); }
			'field'
			{ after(grammarAccess.getFieldAccess().getNameFieldKeyword_0_0()); }
		)
		{ after(grammarAccess.getFieldAccess().getNameFieldKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__FieldnameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getFieldnameFieldnamesEnumRuleCall_2_0()); }
		ruleFieldnames
		{ after(grammarAccess.getFieldAccess().getFieldnameFieldnamesEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__FieldstringAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getFieldstringSTRINGTerminalRuleCall_4_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getFieldAccess().getFieldstringSTRINGTerminalRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__FieldintAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getFieldintINTTerminalRuleCall_4_1_0()); }
		RULE_INT
		{ after(grammarAccess.getFieldAccess().getFieldintINTTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__FielddoubleAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getFielddoubleDOUBLEParserRuleCall_4_2_0()); }
		ruleDOUBLE
		{ after(grammarAccess.getFieldAccess().getFielddoubleDOUBLEParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Info__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInfoAccess().getNameAsynREADBACKKeyword_2_0()); }
		(
			{ before(grammarAccess.getInfoAccess().getNameAsynREADBACKKeyword_2_0()); }
			'asyn:READBACK'
			{ after(grammarAccess.getInfoAccess().getNameAsynREADBACKKeyword_2_0()); }
		)
		{ after(grammarAccess.getInfoAccess().getNameAsynREADBACKKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Info__InfoValueAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInfoAccess().getInfoValueSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getInfoAccess().getInfoValueSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_SL_COMMENT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
