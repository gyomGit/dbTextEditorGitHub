/**
 * generated by Xtext 2.15.0
 */
package org.csstudio.xtext.dbdtexteditor.tests;

import com.google.inject.Inject;
import org.csstudio.xtext.dbdtexteditor.dbdTextEditor.dbdModel;
import org.csstudio.xtext.dbdtexteditor.tests.DbdTextEditorInjectorProvider;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.testing.InjectWith;
import org.eclipse.xtext.testing.XtextRunner;
import org.eclipse.xtext.testing.util.ParseHelper;
import org.eclipse.xtext.testing.validation.ValidationTestHelper;
import org.eclipse.xtext.xbase.lib.Exceptions;
import org.eclipse.xtext.xbase.lib.Extension;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(XtextRunner.class)
@InjectWith(DbdTextEditorInjectorProvider.class)
@SuppressWarnings("all")
public class DbdTextEditorParsingTest {
  @Inject
  @Extension
  private ParseHelper<dbdModel> _parseHelper;
  
  @Inject
  @Extension
  private ValidationTestHelper _validationTestHelper;
  
  @Test
  public void testParsing() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("menu(MyMenuType) {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("choice(MyChoiceType, \"String\")");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      _builder.append("recordtype(MyRecordType) {");
      _builder.newLine();
      _builder.append("field(MyFieldType, DBF_MyDbfType) {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("MyfieldAttribute(\"String\")");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("MyfieldAttribute(int)");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      _builder.newLine();
      final dbdModel dbdModel = this._parseHelper.parse(_builder);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }
}
