/*
 * generated by Xtext 2.15.0
 */
grammar InternalDbTextEditor;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.csstudio.xtext.dbtexteditor.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.csstudio.xtext.dbtexteditor.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.csstudio.xtext.dbtexteditor.services.DbTextEditorGrammarAccess;

}

@parser::members {

 	private DbTextEditorGrammarAccess grammarAccess;

    public InternalDbTextEditorParser(TokenStream input, DbTextEditorGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "dbModel";
   	}

   	@Override
   	protected DbTextEditorGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuledbModel
entryRuledbModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDbModelRule()); }
	iv_ruledbModel=ruledbModel
	{ $current=$iv_ruledbModel.current; }
	EOF;

// Rule dbModel
ruledbModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getDbModelAccess().getRecordsRecordParserRuleCall_0());
			}
			lv_records_0_0=ruleRecord
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getDbModelRule());
				}
				add(
					$current,
					"records",
					lv_records_0_0,
					"org.csstudio.xtext.dbtexteditor.DbTextEditor.Record");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleRecord
entryRuleRecord returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRecordRule()); }
	iv_ruleRecord=ruleRecord
	{ $current=$iv_ruleRecord.current; }
	EOF;

// Rule Record
ruleRecord returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='record'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getRecordAccess().getNameRecordKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRecordRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "record");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getRecordAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRecordAccess().getRecordnameRecordnamesEnumRuleCall_2_0());
				}
				lv_recordname_2_0=ruleRecordnames
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRecordRule());
					}
					set(
						$current,
						"recordname",
						lv_recordname_2_0,
						"org.csstudio.xtext.dbtexteditor.DbTextEditor.Recordnames");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getRecordAccess().getCommaKeyword_3());
		}
		(
			(
				lv_recordLink_4_0=RULE_STRING
				{
					newLeafNode(lv_recordLink_4_0, grammarAccess.getRecordAccess().getRecordLinkSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRecordRule());
					}
					setWithLastConsumed(
						$current,
						"recordLink",
						lv_recordLink_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getRecordAccess().getRightParenthesisKeyword_5());
		}
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getRecordAccess().getLeftCurlyBracketKeyword_6());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getRecordAccess().getInfosfieldsInfoParserRuleCall_7_0_0());
					}
					lv_infosfields_7_1=ruleInfo
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRecordRule());
						}
						add(
							$current,
							"infosfields",
							lv_infosfields_7_1,
							"org.csstudio.xtext.dbtexteditor.DbTextEditor.Info");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getRecordAccess().getInfosfieldsFieldParserRuleCall_7_0_1());
					}
					lv_infosfields_7_2=ruleField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRecordRule());
						}
						add(
							$current,
							"infosfields",
							lv_infosfields_7_2,
							"org.csstudio.xtext.dbtexteditor.DbTextEditor.Field");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getRecordAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleField
entryRuleField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldRule()); }
	iv_ruleField=ruleField
	{ $current=$iv_ruleField.current; }
	EOF;

// Rule Field
ruleField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='field'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getFieldAccess().getNameFieldKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "field");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getFieldAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldAccess().getFieldnameFieldnamesEnumRuleCall_2_0());
				}
				lv_fieldname_2_0=ruleFieldnames
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldRule());
					}
					set(
						$current,
						"fieldname",
						lv_fieldname_2_0,
						"org.csstudio.xtext.dbtexteditor.DbTextEditor.Fieldnames");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getFieldAccess().getCommaKeyword_3());
		}
		(
			(
				(
					lv_fieldstring_4_0=RULE_STRING
					{
						newLeafNode(lv_fieldstring_4_0, grammarAccess.getFieldAccess().getFieldstringSTRINGTerminalRuleCall_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFieldRule());
						}
						setWithLastConsumed(
							$current,
							"fieldstring",
							lv_fieldstring_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			    |
			(
				(
					lv_fieldint_5_0=RULE_INT
					{
						newLeafNode(lv_fieldint_5_0, grammarAccess.getFieldAccess().getFieldintINTTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFieldRule());
						}
						setWithLastConsumed(
							$current,
							"fieldint",
							lv_fieldint_5_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getFieldAccess().getFielddoubleDOUBLEParserRuleCall_4_2_0());
					}
					lv_fielddouble_6_0=ruleDOUBLE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFieldRule());
						}
						set(
							$current,
							"fielddouble",
							lv_fielddouble_6_0,
							"org.csstudio.xtext.dbtexteditor.DbTextEditor.DOUBLE");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getFieldAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleInfo
entryRuleInfo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInfoRule()); }
	iv_ruleInfo=ruleInfo
	{ $current=$iv_ruleInfo.current; }
	EOF;

// Rule Info
ruleInfo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='info'
		{
			newLeafNode(otherlv_0, grammarAccess.getInfoAccess().getInfoKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getInfoAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_name_2_0='asyn:READBACK'
				{
					newLeafNode(lv_name_2_0, grammarAccess.getInfoAccess().getNameAsynREADBACKKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInfoRule());
					}
					setWithLastConsumed($current, "name", lv_name_2_0, "asyn:READBACK");
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getInfoAccess().getCommaKeyword_3());
		}
		(
			(
				lv_infoValue_4_0=RULE_STRING
				{
					newLeafNode(lv_infoValue_4_0, grammarAccess.getInfoAccess().getInfoValueSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInfoRule());
					}
					setWithLastConsumed(
						$current,
						"infoValue",
						lv_infoValue_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getInfoAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleDOUBLE
entryRuleDOUBLE returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDOUBLERule()); }
	iv_ruleDOUBLE=ruleDOUBLE
	{ $current=$iv_ruleDOUBLE.current.getText(); }
	EOF;

// Rule DOUBLE
ruleDOUBLE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_0());
		}
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDOUBLEAccess().getFullStopKeyword_1());
		}
		this_INT_2=RULE_INT
		{
			$current.merge(this_INT_2);
		}
		{
			newLeafNode(this_INT_2, grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_2());
		}
	)
;

// Rule Fieldnames
ruleFieldnames returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='NAME'
			{
				$current = grammarAccess.getFieldnamesAccess().getNAMEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getFieldnamesAccess().getNAMEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='DESC'
			{
				$current = grammarAccess.getFieldnamesAccess().getDESCEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getFieldnamesAccess().getDESCEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='ASG'
			{
				$current = grammarAccess.getFieldnamesAccess().getASGEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getFieldnamesAccess().getASGEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='SCAN'
			{
				$current = grammarAccess.getFieldnamesAccess().getSCANEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getFieldnamesAccess().getSCANEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='PHAS'
			{
				$current = grammarAccess.getFieldnamesAccess().getPHASEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getFieldnamesAccess().getPHASEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='PINI'
			{
				$current = grammarAccess.getFieldnamesAccess().getPINIEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getFieldnamesAccess().getPINIEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='SDIS'
			{
				$current = grammarAccess.getFieldnamesAccess().getSDISEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getFieldnamesAccess().getSDISEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='PROC'
			{
				$current = grammarAccess.getFieldnamesAccess().getPROCEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getFieldnamesAccess().getPROCEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='PACT'
			{
				$current = grammarAccess.getFieldnamesAccess().getPACTEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getFieldnamesAccess().getPACTEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='SEVR'
			{
				$current = grammarAccess.getFieldnamesAccess().getSEVREnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getFieldnamesAccess().getSEVREnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10='STAT'
			{
				$current = grammarAccess.getFieldnamesAccess().getSTATEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getFieldnamesAccess().getSTATEnumLiteralDeclaration_10());
			}
		)
		    |
		(
			enumLiteral_11='TIME'
			{
				$current = grammarAccess.getFieldnamesAccess().getTIMEEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_11, grammarAccess.getFieldnamesAccess().getTIMEEnumLiteralDeclaration_11());
			}
		)
		    |
		(
			enumLiteral_12='DTYP'
			{
				$current = grammarAccess.getFieldnamesAccess().getDTYPEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_12, grammarAccess.getFieldnamesAccess().getDTYPEnumLiteralDeclaration_12());
			}
		)
		    |
		(
			enumLiteral_13='ONAM'
			{
				$current = grammarAccess.getFieldnamesAccess().getONAMEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_13, grammarAccess.getFieldnamesAccess().getONAMEnumLiteralDeclaration_13());
			}
		)
		    |
		(
			enumLiteral_14='OSV'
			{
				$current = grammarAccess.getFieldnamesAccess().getOSVEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_14, grammarAccess.getFieldnamesAccess().getOSVEnumLiteralDeclaration_14());
			}
		)
		    |
		(
			enumLiteral_15='OUT'
			{
				$current = grammarAccess.getFieldnamesAccess().getOUTEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_15, grammarAccess.getFieldnamesAccess().getOUTEnumLiteralDeclaration_15());
			}
		)
		    |
		(
			enumLiteral_16='SIML'
			{
				$current = grammarAccess.getFieldnamesAccess().getSIMLEnumLiteralDeclaration_16().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_16, grammarAccess.getFieldnamesAccess().getSIMLEnumLiteralDeclaration_16());
			}
		)
		    |
		(
			enumLiteral_17='ZNAM'
			{
				$current = grammarAccess.getFieldnamesAccess().getZNAMEnumLiteralDeclaration_17().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_17, grammarAccess.getFieldnamesAccess().getZNAMEnumLiteralDeclaration_17());
			}
		)
		    |
		(
			enumLiteral_18='ZSV'
			{
				$current = grammarAccess.getFieldnamesAccess().getZSVEnumLiteralDeclaration_18().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_18, grammarAccess.getFieldnamesAccess().getZSVEnumLiteralDeclaration_18());
			}
		)
		    |
		(
			enumLiteral_19='INP'
			{
				$current = grammarAccess.getFieldnamesAccess().getINPEnumLiteralDeclaration_19().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_19, grammarAccess.getFieldnamesAccess().getINPEnumLiteralDeclaration_19());
			}
		)
		    |
		(
			enumLiteral_20='EGU'
			{
				$current = grammarAccess.getFieldnamesAccess().getEGUEnumLiteralDeclaration_20().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_20, grammarAccess.getFieldnamesAccess().getEGUEnumLiteralDeclaration_20());
			}
		)
		    |
		(
			enumLiteral_21='LINR'
			{
				$current = grammarAccess.getFieldnamesAccess().getLINREnumLiteralDeclaration_21().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_21, grammarAccess.getFieldnamesAccess().getLINREnumLiteralDeclaration_21());
			}
		)
		    |
		(
			enumLiteral_22='EGUL'
			{
				$current = grammarAccess.getFieldnamesAccess().getEGULEnumLiteralDeclaration_22().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_22, grammarAccess.getFieldnamesAccess().getEGULEnumLiteralDeclaration_22());
			}
		)
		    |
		(
			enumLiteral_23='EGUF'
			{
				$current = grammarAccess.getFieldnamesAccess().getEGUFEnumLiteralDeclaration_23().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_23, grammarAccess.getFieldnamesAccess().getEGUFEnumLiteralDeclaration_23());
			}
		)
		    |
		(
			enumLiteral_24='HIGH'
			{
				$current = grammarAccess.getFieldnamesAccess().getHIGHEnumLiteralDeclaration_24().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_24, grammarAccess.getFieldnamesAccess().getHIGHEnumLiteralDeclaration_24());
			}
		)
		    |
		(
			enumLiteral_25='HSV'
			{
				$current = grammarAccess.getFieldnamesAccess().getHSVEnumLiteralDeclaration_25().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_25, grammarAccess.getFieldnamesAccess().getHSVEnumLiteralDeclaration_25());
			}
		)
		    |
		(
			enumLiteral_26='HIHI'
			{
				$current = grammarAccess.getFieldnamesAccess().getHIHIEnumLiteralDeclaration_26().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_26, grammarAccess.getFieldnamesAccess().getHIHIEnumLiteralDeclaration_26());
			}
		)
		    |
		(
			enumLiteral_27='HHSV'
			{
				$current = grammarAccess.getFieldnamesAccess().getHHSVEnumLiteralDeclaration_27().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_27, grammarAccess.getFieldnamesAccess().getHHSVEnumLiteralDeclaration_27());
			}
		)
		    |
		(
			enumLiteral_28='EIST'
			{
				$current = grammarAccess.getFieldnamesAccess().getEISTEnumLiteralDeclaration_28().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_28, grammarAccess.getFieldnamesAccess().getEISTEnumLiteralDeclaration_28());
			}
		)
		    |
		(
			enumLiteral_29='EISV'
			{
				$current = grammarAccess.getFieldnamesAccess().getEISVEnumLiteralDeclaration_29().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_29, grammarAccess.getFieldnamesAccess().getEISVEnumLiteralDeclaration_29());
			}
		)
		    |
		(
			enumLiteral_30='EIVL'
			{
				$current = grammarAccess.getFieldnamesAccess().getEIVLEnumLiteralDeclaration_30().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_30, grammarAccess.getFieldnamesAccess().getEIVLEnumLiteralDeclaration_30());
			}
		)
		    |
		(
			enumLiteral_31='ELST'
			{
				$current = grammarAccess.getFieldnamesAccess().getELSTEnumLiteralDeclaration_31().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_31, grammarAccess.getFieldnamesAccess().getELSTEnumLiteralDeclaration_31());
			}
		)
		    |
		(
			enumLiteral_32='ELSV'
			{
				$current = grammarAccess.getFieldnamesAccess().getELSVEnumLiteralDeclaration_32().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_32, grammarAccess.getFieldnamesAccess().getELSVEnumLiteralDeclaration_32());
			}
		)
		    |
		(
			enumLiteral_33='ELVL'
			{
				$current = grammarAccess.getFieldnamesAccess().getELVLEnumLiteralDeclaration_33().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_33, grammarAccess.getFieldnamesAccess().getELVLEnumLiteralDeclaration_33());
			}
		)
		    |
		(
			enumLiteral_34='FRST'
			{
				$current = grammarAccess.getFieldnamesAccess().getFRSTEnumLiteralDeclaration_34().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_34, grammarAccess.getFieldnamesAccess().getFRSTEnumLiteralDeclaration_34());
			}
		)
		    |
		(
			enumLiteral_35='FRSV'
			{
				$current = grammarAccess.getFieldnamesAccess().getFRSVEnumLiteralDeclaration_35().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_35, grammarAccess.getFieldnamesAccess().getFRSVEnumLiteralDeclaration_35());
			}
		)
		    |
		(
			enumLiteral_36='FRVL'
			{
				$current = grammarAccess.getFieldnamesAccess().getFRVLEnumLiteralDeclaration_36().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_36, grammarAccess.getFieldnamesAccess().getFRVLEnumLiteralDeclaration_36());
			}
		)
		    |
		(
			enumLiteral_37='FVST'
			{
				$current = grammarAccess.getFieldnamesAccess().getFVSTEnumLiteralDeclaration_37().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_37, grammarAccess.getFieldnamesAccess().getFVSTEnumLiteralDeclaration_37());
			}
		)
		    |
		(
			enumLiteral_38='HYST'
			{
				$current = grammarAccess.getFieldnamesAccess().getHYSTEnumLiteralDeclaration_38().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_38, grammarAccess.getFieldnamesAccess().getHYSTEnumLiteralDeclaration_38());
			}
		)
		    |
		(
			enumLiteral_39='LLSV'
			{
				$current = grammarAccess.getFieldnamesAccess().getLLSVEnumLiteralDeclaration_39().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_39, grammarAccess.getFieldnamesAccess().getLLSVEnumLiteralDeclaration_39());
			}
		)
		    |
		(
			enumLiteral_40='FVSV'
			{
				$current = grammarAccess.getFieldnamesAccess().getFVSVEnumLiteralDeclaration_40().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_40, grammarAccess.getFieldnamesAccess().getFVSVEnumLiteralDeclaration_40());
			}
		)
		    |
		(
			enumLiteral_41='FVVL'
			{
				$current = grammarAccess.getFieldnamesAccess().getFVVLEnumLiteralDeclaration_41().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_41, grammarAccess.getFieldnamesAccess().getFVVLEnumLiteralDeclaration_41());
			}
		)
		    |
		(
			enumLiteral_42='MASK'
			{
				$current = grammarAccess.getFieldnamesAccess().getMASKEnumLiteralDeclaration_42().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_42, grammarAccess.getFieldnamesAccess().getMASKEnumLiteralDeclaration_42());
			}
		)
		    |
		(
			enumLiteral_43='NIST'
			{
				$current = grammarAccess.getFieldnamesAccess().getNISTEnumLiteralDeclaration_43().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_43, grammarAccess.getFieldnamesAccess().getNISTEnumLiteralDeclaration_43());
			}
		)
		    |
		(
			enumLiteral_44='NISV'
			{
				$current = grammarAccess.getFieldnamesAccess().getNISVEnumLiteralDeclaration_44().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_44, grammarAccess.getFieldnamesAccess().getNISVEnumLiteralDeclaration_44());
			}
		)
		    |
		(
			enumLiteral_45='NIVL'
			{
				$current = grammarAccess.getFieldnamesAccess().getNIVLEnumLiteralDeclaration_45().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_45, grammarAccess.getFieldnamesAccess().getNIVLEnumLiteralDeclaration_45());
			}
		)
		    |
		(
			enumLiteral_46='NOBT'
			{
				$current = grammarAccess.getFieldnamesAccess().getNOBTEnumLiteralDeclaration_46().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_46, grammarAccess.getFieldnamesAccess().getNOBTEnumLiteralDeclaration_46());
			}
		)
		    |
		(
			enumLiteral_47='ONST'
			{
				$current = grammarAccess.getFieldnamesAccess().getONSTEnumLiteralDeclaration_47().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_47, grammarAccess.getFieldnamesAccess().getONSTEnumLiteralDeclaration_47());
			}
		)
		    |
		(
			enumLiteral_48='ONSV'
			{
				$current = grammarAccess.getFieldnamesAccess().getONSVEnumLiteralDeclaration_48().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_48, grammarAccess.getFieldnamesAccess().getONSVEnumLiteralDeclaration_48());
			}
		)
		    |
		(
			enumLiteral_49='ONVL'
			{
				$current = grammarAccess.getFieldnamesAccess().getONVLEnumLiteralDeclaration_49().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_49, grammarAccess.getFieldnamesAccess().getONVLEnumLiteralDeclaration_49());
			}
		)
		    |
		(
			enumLiteral_50='SHFT'
			{
				$current = grammarAccess.getFieldnamesAccess().getSHFTEnumLiteralDeclaration_50().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_50, grammarAccess.getFieldnamesAccess().getSHFTEnumLiteralDeclaration_50());
			}
		)
		    |
		(
			enumLiteral_51='SVST'
			{
				$current = grammarAccess.getFieldnamesAccess().getSVSTEnumLiteralDeclaration_51().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_51, grammarAccess.getFieldnamesAccess().getSVSTEnumLiteralDeclaration_51());
			}
		)
		    |
		(
			enumLiteral_52='SVSV'
			{
				$current = grammarAccess.getFieldnamesAccess().getSVSVEnumLiteralDeclaration_52().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_52, grammarAccess.getFieldnamesAccess().getSVSVEnumLiteralDeclaration_52());
			}
		)
		    |
		(
			enumLiteral_53='SVVL'
			{
				$current = grammarAccess.getFieldnamesAccess().getSVVLEnumLiteralDeclaration_53().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_53, grammarAccess.getFieldnamesAccess().getSVVLEnumLiteralDeclaration_53());
			}
		)
		    |
		(
			enumLiteral_54='SXST'
			{
				$current = grammarAccess.getFieldnamesAccess().getSXSTEnumLiteralDeclaration_54().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_54, grammarAccess.getFieldnamesAccess().getSXSTEnumLiteralDeclaration_54());
			}
		)
		    |
		(
			enumLiteral_55='SXSV'
			{
				$current = grammarAccess.getFieldnamesAccess().getSXSVEnumLiteralDeclaration_55().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_55, grammarAccess.getFieldnamesAccess().getSXSVEnumLiteralDeclaration_55());
			}
		)
		    |
		(
			enumLiteral_56='SXVL'
			{
				$current = grammarAccess.getFieldnamesAccess().getSXVLEnumLiteralDeclaration_56().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_56, grammarAccess.getFieldnamesAccess().getSXVLEnumLiteralDeclaration_56());
			}
		)
		    |
		(
			enumLiteral_57='TEST'
			{
				$current = grammarAccess.getFieldnamesAccess().getTESTEnumLiteralDeclaration_57().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_57, grammarAccess.getFieldnamesAccess().getTESTEnumLiteralDeclaration_57());
			}
		)
		    |
		(
			enumLiteral_58='TESV'
			{
				$current = grammarAccess.getFieldnamesAccess().getTESVEnumLiteralDeclaration_58().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_58, grammarAccess.getFieldnamesAccess().getTESVEnumLiteralDeclaration_58());
			}
		)
		    |
		(
			enumLiteral_59='TEVL'
			{
				$current = grammarAccess.getFieldnamesAccess().getTEVLEnumLiteralDeclaration_59().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_59, grammarAccess.getFieldnamesAccess().getTEVLEnumLiteralDeclaration_59());
			}
		)
		    |
		(
			enumLiteral_60='THST'
			{
				$current = grammarAccess.getFieldnamesAccess().getTHSTEnumLiteralDeclaration_60().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_60, grammarAccess.getFieldnamesAccess().getTHSTEnumLiteralDeclaration_60());
			}
		)
		    |
		(
			enumLiteral_61='THSV'
			{
				$current = grammarAccess.getFieldnamesAccess().getTHSVEnumLiteralDeclaration_61().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_61, grammarAccess.getFieldnamesAccess().getTHSVEnumLiteralDeclaration_61());
			}
		)
		    |
		(
			enumLiteral_62='THVL'
			{
				$current = grammarAccess.getFieldnamesAccess().getTHVLEnumLiteralDeclaration_62().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_62, grammarAccess.getFieldnamesAccess().getTHVLEnumLiteralDeclaration_62());
			}
		)
		    |
		(
			enumLiteral_63='TWST'
			{
				$current = grammarAccess.getFieldnamesAccess().getTWSTEnumLiteralDeclaration_63().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_63, grammarAccess.getFieldnamesAccess().getTWSTEnumLiteralDeclaration_63());
			}
		)
		    |
		(
			enumLiteral_64='TWSV'
			{
				$current = grammarAccess.getFieldnamesAccess().getTWSVEnumLiteralDeclaration_64().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_64, grammarAccess.getFieldnamesAccess().getTWSVEnumLiteralDeclaration_64());
			}
		)
		    |
		(
			enumLiteral_65='TWVL'
			{
				$current = grammarAccess.getFieldnamesAccess().getTWVLEnumLiteralDeclaration_65().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_65, grammarAccess.getFieldnamesAccess().getTWVLEnumLiteralDeclaration_65());
			}
		)
		    |
		(
			enumLiteral_66='UNSV'
			{
				$current = grammarAccess.getFieldnamesAccess().getUNSVEnumLiteralDeclaration_66().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_66, grammarAccess.getFieldnamesAccess().getUNSVEnumLiteralDeclaration_66());
			}
		)
		    |
		(
			enumLiteral_67='ZRST'
			{
				$current = grammarAccess.getFieldnamesAccess().getZRSTEnumLiteralDeclaration_67().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_67, grammarAccess.getFieldnamesAccess().getZRSTEnumLiteralDeclaration_67());
			}
		)
		    |
		(
			enumLiteral_68='ZRSV'
			{
				$current = grammarAccess.getFieldnamesAccess().getZRSVEnumLiteralDeclaration_68().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_68, grammarAccess.getFieldnamesAccess().getZRSVEnumLiteralDeclaration_68());
			}
		)
		    |
		(
			enumLiteral_69='ZRVL'
			{
				$current = grammarAccess.getFieldnamesAccess().getZRVLEnumLiteralDeclaration_69().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_69, grammarAccess.getFieldnamesAccess().getZRVLEnumLiteralDeclaration_69());
			}
		)
		    |
		(
			enumLiteral_70='LOLO'
			{
				$current = grammarAccess.getFieldnamesAccess().getLOLOEnumLiteralDeclaration_70().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_70, grammarAccess.getFieldnamesAccess().getLOLOEnumLiteralDeclaration_70());
			}
		)
		    |
		(
			enumLiteral_71='LOW'
			{
				$current = grammarAccess.getFieldnamesAccess().getLOWEnumLiteralDeclaration_71().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_71, grammarAccess.getFieldnamesAccess().getLOWEnumLiteralDeclaration_71());
			}
		)
		    |
		(
			enumLiteral_72='LSV'
			{
				$current = grammarAccess.getFieldnamesAccess().getLSVEnumLiteralDeclaration_72().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_72, grammarAccess.getFieldnamesAccess().getLSVEnumLiteralDeclaration_72());
			}
		)
		    |
		(
			enumLiteral_73='SSCN'
			{
				$current = grammarAccess.getFieldnamesAccess().getSSCNEnumLiteralDeclaration_73().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_73, grammarAccess.getFieldnamesAccess().getSSCNEnumLiteralDeclaration_73());
			}
		)
		    |
		(
			enumLiteral_74='TSE'
			{
				$current = grammarAccess.getFieldnamesAccess().getTSEEnumLiteralDeclaration_74().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_74, grammarAccess.getFieldnamesAccess().getTSEEnumLiteralDeclaration_74());
			}
		)
		    |
		(
			enumLiteral_75='PREC'
			{
				$current = grammarAccess.getFieldnamesAccess().getPRECEnumLiteralDeclaration_75().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_75, grammarAccess.getFieldnamesAccess().getPRECEnumLiteralDeclaration_75());
			}
		)
		    |
		(
			enumLiteral_76='DRVH'
			{
				$current = grammarAccess.getFieldnamesAccess().getDRVHEnumLiteralDeclaration_76().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_76, grammarAccess.getFieldnamesAccess().getDRVHEnumLiteralDeclaration_76());
			}
		)
		    |
		(
			enumLiteral_77='LOPR'
			{
				$current = grammarAccess.getFieldnamesAccess().getLOPREnumLiteralDeclaration_77().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_77, grammarAccess.getFieldnamesAccess().getLOPREnumLiteralDeclaration_77());
			}
		)
		    |
		(
			enumLiteral_78='DRVL'
			{
				$current = grammarAccess.getFieldnamesAccess().getDRVLEnumLiteralDeclaration_78().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_78, grammarAccess.getFieldnamesAccess().getDRVLEnumLiteralDeclaration_78());
			}
		)
		    |
		(
			enumLiteral_79='HOPR'
			{
				$current = grammarAccess.getFieldnamesAccess().getHOPREnumLiteralDeclaration_79().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_79, grammarAccess.getFieldnamesAccess().getHOPREnumLiteralDeclaration_79());
			}
		)
		    |
		(
			enumLiteral_80='CALC'
			{
				$current = grammarAccess.getFieldnamesAccess().getCALCEnumLiteralDeclaration_80().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_80, grammarAccess.getFieldnamesAccess().getCALCEnumLiteralDeclaration_80());
			}
		)
		    |
		(
			enumLiteral_81='INPA'
			{
				$current = grammarAccess.getFieldnamesAccess().getINPAEnumLiteralDeclaration_81().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_81, grammarAccess.getFieldnamesAccess().getINPAEnumLiteralDeclaration_81());
			}
		)
		    |
		(
			enumLiteral_82='INPB'
			{
				$current = grammarAccess.getFieldnamesAccess().getINPBEnumLiteralDeclaration_82().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_82, grammarAccess.getFieldnamesAccess().getINPBEnumLiteralDeclaration_82());
			}
		)
		    |
		(
			enumLiteral_83='INPC'
			{
				$current = grammarAccess.getFieldnamesAccess().getINPCEnumLiteralDeclaration_83().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_83, grammarAccess.getFieldnamesAccess().getINPCEnumLiteralDeclaration_83());
			}
		)
		    |
		(
			enumLiteral_84='INPD'
			{
				$current = grammarAccess.getFieldnamesAccess().getINPDEnumLiteralDeclaration_84().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_84, grammarAccess.getFieldnamesAccess().getINPDEnumLiteralDeclaration_84());
			}
		)
		    |
		(
			enumLiteral_85='FLNK'
			{
				$current = grammarAccess.getFieldnamesAccess().getFLNKEnumLiteralDeclaration_85().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_85, grammarAccess.getFieldnamesAccess().getFLNKEnumLiteralDeclaration_85());
			}
		)
		    |
		(
			enumLiteral_86='INPE'
			{
				$current = grammarAccess.getFieldnamesAccess().getINPEEnumLiteralDeclaration_86().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_86, grammarAccess.getFieldnamesAccess().getINPEEnumLiteralDeclaration_86());
			}
		)
		    |
		(
			enumLiteral_87='INPF'
			{
				$current = grammarAccess.getFieldnamesAccess().getINPFEnumLiteralDeclaration_87().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_87, grammarAccess.getFieldnamesAccess().getINPFEnumLiteralDeclaration_87());
			}
		)
		    |
		(
			enumLiteral_88='INPG'
			{
				$current = grammarAccess.getFieldnamesAccess().getINPGEnumLiteralDeclaration_88().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_88, grammarAccess.getFieldnamesAccess().getINPGEnumLiteralDeclaration_88());
			}
		)
		    |
		(
			enumLiteral_89='INPH'
			{
				$current = grammarAccess.getFieldnamesAccess().getINPHEnumLiteralDeclaration_89().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_89, grammarAccess.getFieldnamesAccess().getINPHEnumLiteralDeclaration_89());
			}
		)
		    |
		(
			enumLiteral_90='INPI'
			{
				$current = grammarAccess.getFieldnamesAccess().getINPIEnumLiteralDeclaration_90().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_90, grammarAccess.getFieldnamesAccess().getINPIEnumLiteralDeclaration_90());
			}
		)
		    |
		(
			enumLiteral_91='INPJ'
			{
				$current = grammarAccess.getFieldnamesAccess().getINPJEnumLiteralDeclaration_91().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_91, grammarAccess.getFieldnamesAccess().getINPJEnumLiteralDeclaration_91());
			}
		)
		    |
		(
			enumLiteral_92='INPK'
			{
				$current = grammarAccess.getFieldnamesAccess().getINPKEnumLiteralDeclaration_92().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_92, grammarAccess.getFieldnamesAccess().getINPKEnumLiteralDeclaration_92());
			}
		)
		    |
		(
			enumLiteral_93='INAA'
			{
				$current = grammarAccess.getFieldnamesAccess().getINAAEnumLiteralDeclaration_93().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_93, grammarAccess.getFieldnamesAccess().getINAAEnumLiteralDeclaration_93());
			}
		)
		    |
		(
			enumLiteral_94='INBB'
			{
				$current = grammarAccess.getFieldnamesAccess().getINBBEnumLiteralDeclaration_94().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_94, grammarAccess.getFieldnamesAccess().getINBBEnumLiteralDeclaration_94());
			}
		)
		    |
		(
			enumLiteral_95='INCC'
			{
				$current = grammarAccess.getFieldnamesAccess().getINCCEnumLiteralDeclaration_95().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_95, grammarAccess.getFieldnamesAccess().getINCCEnumLiteralDeclaration_95());
			}
		)
		    |
		(
			enumLiteral_96='SIOL'
			{
				$current = grammarAccess.getFieldnamesAccess().getSIOLEnumLiteralDeclaration_96().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_96, grammarAccess.getFieldnamesAccess().getSIOLEnumLiteralDeclaration_96());
			}
		)
	)
;

// Rule Recordnames
ruleRecordnames returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='ai'
			{
				$current = grammarAccess.getRecordnamesAccess().getAiEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getRecordnamesAccess().getAiEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='ao'
			{
				$current = grammarAccess.getRecordnamesAccess().getAoEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getRecordnamesAccess().getAoEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='longin'
			{
				$current = grammarAccess.getRecordnamesAccess().getLonginEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getRecordnamesAccess().getLonginEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='longout'
			{
				$current = grammarAccess.getRecordnamesAccess().getLongoutEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getRecordnamesAccess().getLongoutEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='stringin'
			{
				$current = grammarAccess.getRecordnamesAccess().getStringinEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getRecordnamesAccess().getStringinEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='stringout'
			{
				$current = grammarAccess.getRecordnamesAccess().getStringoutEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getRecordnamesAccess().getStringoutEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='lsi'
			{
				$current = grammarAccess.getRecordnamesAccess().getLsiEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getRecordnamesAccess().getLsiEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='lso'
			{
				$current = grammarAccess.getRecordnamesAccess().getLsoEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getRecordnamesAccess().getLsoEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='waveform'
			{
				$current = grammarAccess.getRecordnamesAccess().getWaveformEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getRecordnamesAccess().getWaveformEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='bi'
			{
				$current = grammarAccess.getRecordnamesAccess().getBiEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getRecordnamesAccess().getBiEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10='bo'
			{
				$current = grammarAccess.getRecordnamesAccess().getBoEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getRecordnamesAccess().getBoEnumLiteralDeclaration_10());
			}
		)
		    |
		(
			enumLiteral_11='mbbi'
			{
				$current = grammarAccess.getRecordnamesAccess().getMbbiEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_11, grammarAccess.getRecordnamesAccess().getMbbiEnumLiteralDeclaration_11());
			}
		)
		    |
		(
			enumLiteral_12='mbbo'
			{
				$current = grammarAccess.getRecordnamesAccess().getMbboEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_12, grammarAccess.getRecordnamesAccess().getMbboEnumLiteralDeclaration_12());
			}
		)
		    |
		(
			enumLiteral_13='mbbiDirect'
			{
				$current = grammarAccess.getRecordnamesAccess().getMbbiDirectEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_13, grammarAccess.getRecordnamesAccess().getMbbiDirectEnumLiteralDeclaration_13());
			}
		)
		    |
		(
			enumLiteral_14='mbboDirect'
			{
				$current = grammarAccess.getRecordnamesAccess().getMbboDirectEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_14, grammarAccess.getRecordnamesAccess().getMbboDirectEnumLiteralDeclaration_14());
			}
		)
		    |
		(
			enumLiteral_15='calcout'
			{
				$current = grammarAccess.getRecordnamesAccess().getCalcoutEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_15, grammarAccess.getRecordnamesAccess().getCalcoutEnumLiteralDeclaration_15());
			}
		)
		    |
		(
			enumLiteral_16='scalcout'
			{
				$current = grammarAccess.getRecordnamesAccess().getScalcoutEnumLiteralDeclaration_16().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_16, grammarAccess.getRecordnamesAccess().getScalcoutEnumLiteralDeclaration_16());
			}
		)
		    |
		(
			enumLiteral_17='calc'
			{
				$current = grammarAccess.getRecordnamesAccess().getCalcEnumLiteralDeclaration_17().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_17, grammarAccess.getRecordnamesAccess().getCalcEnumLiteralDeclaration_17());
			}
		)
	)
;

RULE_SL_COMMENT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
