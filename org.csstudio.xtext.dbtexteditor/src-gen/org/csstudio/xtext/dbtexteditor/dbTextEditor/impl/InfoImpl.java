/**
 * generated by Xtext 2.15.0
 */
package org.csstudio.xtext.dbtexteditor.dbTextEditor.impl;

import org.csstudio.xtext.dbtexteditor.dbTextEditor.DbTextEditorPackage;
import org.csstudio.xtext.dbtexteditor.dbTextEditor.Info;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Info</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.csstudio.xtext.dbtexteditor.dbTextEditor.impl.InfoImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.csstudio.xtext.dbtexteditor.dbTextEditor.impl.InfoImpl#getInfoValue <em>Info Value</em>}</li>
 * </ul>
 *
 * @generated
 */
public class InfoImpl extends MinimalEObjectImpl.Container implements Info
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getInfoValue() <em>Info Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInfoValue()
   * @generated
   * @ordered
   */
  protected static final String INFO_VALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getInfoValue() <em>Info Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInfoValue()
   * @generated
   * @ordered
   */
  protected String infoValue = INFO_VALUE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected InfoImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DbTextEditorPackage.Literals.INFO;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DbTextEditorPackage.INFO__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getInfoValue()
  {
    return infoValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setInfoValue(String newInfoValue)
  {
    String oldInfoValue = infoValue;
    infoValue = newInfoValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DbTextEditorPackage.INFO__INFO_VALUE, oldInfoValue, infoValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DbTextEditorPackage.INFO__NAME:
        return getName();
      case DbTextEditorPackage.INFO__INFO_VALUE:
        return getInfoValue();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DbTextEditorPackage.INFO__NAME:
        setName((String)newValue);
        return;
      case DbTextEditorPackage.INFO__INFO_VALUE:
        setInfoValue((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DbTextEditorPackage.INFO__NAME:
        setName(NAME_EDEFAULT);
        return;
      case DbTextEditorPackage.INFO__INFO_VALUE:
        setInfoValue(INFO_VALUE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DbTextEditorPackage.INFO__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case DbTextEditorPackage.INFO__INFO_VALUE:
        return INFO_VALUE_EDEFAULT == null ? infoValue != null : !INFO_VALUE_EDEFAULT.equals(infoValue);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", infoValue: ");
    result.append(infoValue);
    result.append(')');
    return result.toString();
  }

} //InfoImpl
